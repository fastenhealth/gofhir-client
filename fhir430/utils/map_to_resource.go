// Copyright 2022 - Fasten Health
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package utils

import (
	"encoding/json"
	"fmt"
	fhir430 "github.com/fastenhealth/gofhir-models/fhir430"
)

// THIS FILE IS GENERATED BY https://github.com/fastenhealth/gofhir-models-gen
// PLEASE DO NOT EDIT BY HAND

func MapToResource(resourceRawJson json.RawMessage, asPointer bool) (interface{}, error) {
	var partial map[string]interface{}
	err := json.Unmarshal(resourceRawJson, &partial)
	if err != nil {
		return nil, err
	}
	rt, rtOk := partial["resourceType"]
	if !rtOk {
		return nil, fmt.Errorf("could not determine resourceType")
	}
	switch rt {
	case "Account":
		x := fhir430.Account{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ActivityDefinition":
		x := fhir430.ActivityDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "AdverseEvent":
		x := fhir430.AdverseEvent{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "AllergyIntolerance":
		x := fhir430.AllergyIntolerance{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Appointment":
		x := fhir430.Appointment{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "AppointmentResponse":
		x := fhir430.AppointmentResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "AuditEvent":
		x := fhir430.AuditEvent{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Basic":
		x := fhir430.Basic{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Binary":
		x := fhir430.Binary{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "BiologicallyDerivedProduct":
		x := fhir430.BiologicallyDerivedProduct{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "BodyStructure":
		x := fhir430.BodyStructure{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Bundle":
		x := fhir430.Bundle{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CapabilityStatement":
		x := fhir430.CapabilityStatement{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CarePlan":
		x := fhir430.CarePlan{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CareTeam":
		x := fhir430.CareTeam{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CatalogEntry":
		x := fhir430.CatalogEntry{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ChargeItem":
		x := fhir430.ChargeItem{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ChargeItemDefinition":
		x := fhir430.ChargeItemDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Claim":
		x := fhir430.Claim{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ClaimResponse":
		x := fhir430.ClaimResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ClinicalImpression":
		x := fhir430.ClinicalImpression{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CodeSystem":
		x := fhir430.CodeSystem{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Communication":
		x := fhir430.Communication{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CommunicationRequest":
		x := fhir430.CommunicationRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CompartmentDefinition":
		x := fhir430.CompartmentDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Composition":
		x := fhir430.Composition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ConceptMap":
		x := fhir430.ConceptMap{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Condition":
		x := fhir430.Condition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Consent":
		x := fhir430.Consent{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Contract":
		x := fhir430.Contract{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Coverage":
		x := fhir430.Coverage{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CoverageEligibilityRequest":
		x := fhir430.CoverageEligibilityRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CoverageEligibilityResponse":
		x := fhir430.CoverageEligibilityResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DetectedIssue":
		x := fhir430.DetectedIssue{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Device":
		x := fhir430.Device{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DeviceDefinition":
		x := fhir430.DeviceDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DeviceMetric":
		x := fhir430.DeviceMetric{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DeviceRequest":
		x := fhir430.DeviceRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DeviceUseStatement":
		x := fhir430.DeviceUseStatement{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DiagnosticReport":
		x := fhir430.DiagnosticReport{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DocumentManifest":
		x := fhir430.DocumentManifest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DocumentReference":
		x := fhir430.DocumentReference{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DomainResource":
		x := fhir430.DomainResource{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EffectEvidenceSynthesis":
		x := fhir430.EffectEvidenceSynthesis{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Encounter":
		x := fhir430.Encounter{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Endpoint":
		x := fhir430.Endpoint{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EnrollmentRequest":
		x := fhir430.EnrollmentRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EnrollmentResponse":
		x := fhir430.EnrollmentResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EpisodeOfCare":
		x := fhir430.EpisodeOfCare{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EventDefinition":
		x := fhir430.EventDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Evidence":
		x := fhir430.Evidence{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EvidenceVariable":
		x := fhir430.EvidenceVariable{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ExampleScenario":
		x := fhir430.ExampleScenario{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ExplanationOfBenefit":
		x := fhir430.ExplanationOfBenefit{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "FamilyMemberHistory":
		x := fhir430.FamilyMemberHistory{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Flag":
		x := fhir430.Flag{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Goal":
		x := fhir430.Goal{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "GraphDefinition":
		x := fhir430.GraphDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Group":
		x := fhir430.Group{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "GuidanceResponse":
		x := fhir430.GuidanceResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "HealthcareService":
		x := fhir430.HealthcareService{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ImagingStudy":
		x := fhir430.ImagingStudy{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Immunization":
		x := fhir430.Immunization{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ImmunizationEvaluation":
		x := fhir430.ImmunizationEvaluation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ImmunizationRecommendation":
		x := fhir430.ImmunizationRecommendation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ImplementationGuide":
		x := fhir430.ImplementationGuide{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "InsurancePlan":
		x := fhir430.InsurancePlan{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Invoice":
		x := fhir430.Invoice{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Library":
		x := fhir430.Library{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Linkage":
		x := fhir430.Linkage{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "List":
		x := fhir430.List{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Location":
		x := fhir430.Location{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Measure":
		x := fhir430.Measure{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MeasureReport":
		x := fhir430.MeasureReport{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Media":
		x := fhir430.Media{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Medication":
		x := fhir430.Medication{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicationAdministration":
		x := fhir430.MedicationAdministration{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicationDispense":
		x := fhir430.MedicationDispense{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicationKnowledge":
		x := fhir430.MedicationKnowledge{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicationRequest":
		x := fhir430.MedicationRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicationStatement":
		x := fhir430.MedicationStatement{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProduct":
		x := fhir430.MedicinalProduct{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductAuthorization":
		x := fhir430.MedicinalProductAuthorization{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductContraindication":
		x := fhir430.MedicinalProductContraindication{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductIndication":
		x := fhir430.MedicinalProductIndication{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductIngredient":
		x := fhir430.MedicinalProductIngredient{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductInteraction":
		x := fhir430.MedicinalProductInteraction{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductManufactured":
		x := fhir430.MedicinalProductManufactured{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductPackaged":
		x := fhir430.MedicinalProductPackaged{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductPharmaceutical":
		x := fhir430.MedicinalProductPharmaceutical{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductUndesirableEffect":
		x := fhir430.MedicinalProductUndesirableEffect{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MessageDefinition":
		x := fhir430.MessageDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MessageHeader":
		x := fhir430.MessageHeader{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MolecularSequence":
		x := fhir430.MolecularSequence{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "NamingSystem":
		x := fhir430.NamingSystem{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "NutritionOrder":
		x := fhir430.NutritionOrder{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Observation":
		x := fhir430.Observation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ObservationDefinition":
		x := fhir430.ObservationDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "OperationDefinition":
		x := fhir430.OperationDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "OperationOutcome":
		x := fhir430.OperationOutcome{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Organization":
		x := fhir430.Organization{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "OrganizationAffiliation":
		x := fhir430.OrganizationAffiliation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Parameters":
		x := fhir430.Parameters{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Patient":
		x := fhir430.Patient{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "PaymentNotice":
		x := fhir430.PaymentNotice{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "PaymentReconciliation":
		x := fhir430.PaymentReconciliation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Person":
		x := fhir430.Person{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "PlanDefinition":
		x := fhir430.PlanDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Practitioner":
		x := fhir430.Practitioner{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "PractitionerRole":
		x := fhir430.PractitionerRole{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Procedure":
		x := fhir430.Procedure{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Provenance":
		x := fhir430.Provenance{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Questionnaire":
		x := fhir430.Questionnaire{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "QuestionnaireResponse":
		x := fhir430.QuestionnaireResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "RelatedPerson":
		x := fhir430.RelatedPerson{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "RequestGroup":
		x := fhir430.RequestGroup{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ResearchDefinition":
		x := fhir430.ResearchDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ResearchElementDefinition":
		x := fhir430.ResearchElementDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ResearchStudy":
		x := fhir430.ResearchStudy{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ResearchSubject":
		x := fhir430.ResearchSubject{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Resource":
		x := fhir430.Resource{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "RiskAssessment":
		x := fhir430.RiskAssessment{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "RiskEvidenceSynthesis":
		x := fhir430.RiskEvidenceSynthesis{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Schedule":
		x := fhir430.Schedule{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SearchParameter":
		x := fhir430.SearchParameter{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ServiceRequest":
		x := fhir430.ServiceRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Slot":
		x := fhir430.Slot{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Specimen":
		x := fhir430.Specimen{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SpecimenDefinition":
		x := fhir430.SpecimenDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "StructureDefinition":
		x := fhir430.StructureDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "StructureMap":
		x := fhir430.StructureMap{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Subscription":
		x := fhir430.Subscription{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Substance":
		x := fhir430.Substance{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstanceNucleicAcid":
		x := fhir430.SubstanceNucleicAcid{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstancePolymer":
		x := fhir430.SubstancePolymer{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstanceProtein":
		x := fhir430.SubstanceProtein{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstanceReferenceInformation":
		x := fhir430.SubstanceReferenceInformation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstanceSourceMaterial":
		x := fhir430.SubstanceSourceMaterial{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstanceSpecification":
		x := fhir430.SubstanceSpecification{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SupplyDelivery":
		x := fhir430.SupplyDelivery{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SupplyRequest":
		x := fhir430.SupplyRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Task":
		x := fhir430.Task{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "TerminologyCapabilities":
		x := fhir430.TerminologyCapabilities{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "TestReport":
		x := fhir430.TestReport{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "TestScript":
		x := fhir430.TestScript{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ValueSet":
		x := fhir430.ValueSet{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "VerificationResult":
		x := fhir430.VerificationResult{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "VisionPrescription":
		x := fhir430.VisionPrescription{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	default:
		return nil, fmt.Errorf("could not decode resource")
	}
}
