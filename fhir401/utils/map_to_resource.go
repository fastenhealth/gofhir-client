// Copyright 2022 - Fasten Health
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package utils

import (
	"encoding/json"
	"fmt"
	fhir401 "github.com/fastenhealth/gofhir-models/fhir401"
)

// THIS FILE IS GENERATED BY https://github.com/fastenhealth/gofhir-models-gen
// PLEASE DO NOT EDIT BY HAND

func MapToResource(resourceRawJson json.RawMessage, asPointer bool) (interface{}, error) {
	var partial map[string]interface{}
	err := json.Unmarshal(resourceRawJson, &partial)
	if err != nil {
		return nil, err
	}
	rt, rtOk := partial["resourceType"]
	if !rtOk {
		return nil, fmt.Errorf("could not determine resourceType")
	}
	switch rt {
	case "Account":
		x := fhir401.Account{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ActivityDefinition":
		x := fhir401.ActivityDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "AdverseEvent":
		x := fhir401.AdverseEvent{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "AllergyIntolerance":
		x := fhir401.AllergyIntolerance{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Appointment":
		x := fhir401.Appointment{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "AppointmentResponse":
		x := fhir401.AppointmentResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "AuditEvent":
		x := fhir401.AuditEvent{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Basic":
		x := fhir401.Basic{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Binary":
		x := fhir401.Binary{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "BiologicallyDerivedProduct":
		x := fhir401.BiologicallyDerivedProduct{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "BodyStructure":
		x := fhir401.BodyStructure{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Bundle":
		x := fhir401.Bundle{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CapabilityStatement":
		x := fhir401.CapabilityStatement{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CarePlan":
		x := fhir401.CarePlan{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CareTeam":
		x := fhir401.CareTeam{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CatalogEntry":
		x := fhir401.CatalogEntry{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ChargeItem":
		x := fhir401.ChargeItem{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ChargeItemDefinition":
		x := fhir401.ChargeItemDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Claim":
		x := fhir401.Claim{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ClaimResponse":
		x := fhir401.ClaimResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ClinicalImpression":
		x := fhir401.ClinicalImpression{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CodeSystem":
		x := fhir401.CodeSystem{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Communication":
		x := fhir401.Communication{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CommunicationRequest":
		x := fhir401.CommunicationRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CompartmentDefinition":
		x := fhir401.CompartmentDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Composition":
		x := fhir401.Composition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ConceptMap":
		x := fhir401.ConceptMap{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Condition":
		x := fhir401.Condition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Consent":
		x := fhir401.Consent{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Contract":
		x := fhir401.Contract{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Coverage":
		x := fhir401.Coverage{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CoverageEligibilityRequest":
		x := fhir401.CoverageEligibilityRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "CoverageEligibilityResponse":
		x := fhir401.CoverageEligibilityResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DetectedIssue":
		x := fhir401.DetectedIssue{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Device":
		x := fhir401.Device{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DeviceDefinition":
		x := fhir401.DeviceDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DeviceMetric":
		x := fhir401.DeviceMetric{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DeviceRequest":
		x := fhir401.DeviceRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DeviceUseStatement":
		x := fhir401.DeviceUseStatement{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DiagnosticReport":
		x := fhir401.DiagnosticReport{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DocumentManifest":
		x := fhir401.DocumentManifest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DocumentReference":
		x := fhir401.DocumentReference{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "DomainResource":
		x := fhir401.DomainResource{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EffectEvidenceSynthesis":
		x := fhir401.EffectEvidenceSynthesis{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Encounter":
		x := fhir401.Encounter{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Endpoint":
		x := fhir401.Endpoint{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EnrollmentRequest":
		x := fhir401.EnrollmentRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EnrollmentResponse":
		x := fhir401.EnrollmentResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EpisodeOfCare":
		x := fhir401.EpisodeOfCare{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EventDefinition":
		x := fhir401.EventDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Evidence":
		x := fhir401.Evidence{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "EvidenceVariable":
		x := fhir401.EvidenceVariable{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ExampleScenario":
		x := fhir401.ExampleScenario{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ExplanationOfBenefit":
		x := fhir401.ExplanationOfBenefit{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "FamilyMemberHistory":
		x := fhir401.FamilyMemberHistory{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Flag":
		x := fhir401.Flag{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Goal":
		x := fhir401.Goal{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "GraphDefinition":
		x := fhir401.GraphDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Group":
		x := fhir401.Group{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "GuidanceResponse":
		x := fhir401.GuidanceResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "HealthcareService":
		x := fhir401.HealthcareService{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ImagingStudy":
		x := fhir401.ImagingStudy{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Immunization":
		x := fhir401.Immunization{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ImmunizationEvaluation":
		x := fhir401.ImmunizationEvaluation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ImmunizationRecommendation":
		x := fhir401.ImmunizationRecommendation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ImplementationGuide":
		x := fhir401.ImplementationGuide{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "InsurancePlan":
		x := fhir401.InsurancePlan{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Invoice":
		x := fhir401.Invoice{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Library":
		x := fhir401.Library{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Linkage":
		x := fhir401.Linkage{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "List":
		x := fhir401.List{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Location":
		x := fhir401.Location{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Measure":
		x := fhir401.Measure{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MeasureReport":
		x := fhir401.MeasureReport{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Media":
		x := fhir401.Media{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Medication":
		x := fhir401.Medication{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicationAdministration":
		x := fhir401.MedicationAdministration{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicationDispense":
		x := fhir401.MedicationDispense{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicationKnowledge":
		x := fhir401.MedicationKnowledge{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicationRequest":
		x := fhir401.MedicationRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicationStatement":
		x := fhir401.MedicationStatement{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProduct":
		x := fhir401.MedicinalProduct{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductAuthorization":
		x := fhir401.MedicinalProductAuthorization{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductContraindication":
		x := fhir401.MedicinalProductContraindication{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductIndication":
		x := fhir401.MedicinalProductIndication{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductIngredient":
		x := fhir401.MedicinalProductIngredient{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductInteraction":
		x := fhir401.MedicinalProductInteraction{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductManufactured":
		x := fhir401.MedicinalProductManufactured{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductPackaged":
		x := fhir401.MedicinalProductPackaged{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductPharmaceutical":
		x := fhir401.MedicinalProductPharmaceutical{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MedicinalProductUndesirableEffect":
		x := fhir401.MedicinalProductUndesirableEffect{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MessageDefinition":
		x := fhir401.MessageDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MessageHeader":
		x := fhir401.MessageHeader{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "MolecularSequence":
		x := fhir401.MolecularSequence{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "NamingSystem":
		x := fhir401.NamingSystem{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "NutritionOrder":
		x := fhir401.NutritionOrder{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Observation":
		x := fhir401.Observation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ObservationDefinition":
		x := fhir401.ObservationDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "OperationDefinition":
		x := fhir401.OperationDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "OperationOutcome":
		x := fhir401.OperationOutcome{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Organization":
		x := fhir401.Organization{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "OrganizationAffiliation":
		x := fhir401.OrganizationAffiliation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Parameters":
		x := fhir401.Parameters{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Patient":
		x := fhir401.Patient{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "PaymentNotice":
		x := fhir401.PaymentNotice{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "PaymentReconciliation":
		x := fhir401.PaymentReconciliation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Person":
		x := fhir401.Person{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "PlanDefinition":
		x := fhir401.PlanDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Practitioner":
		x := fhir401.Practitioner{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "PractitionerRole":
		x := fhir401.PractitionerRole{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Procedure":
		x := fhir401.Procedure{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Provenance":
		x := fhir401.Provenance{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Questionnaire":
		x := fhir401.Questionnaire{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "QuestionnaireResponse":
		x := fhir401.QuestionnaireResponse{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "RelatedPerson":
		x := fhir401.RelatedPerson{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "RequestGroup":
		x := fhir401.RequestGroup{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ResearchDefinition":
		x := fhir401.ResearchDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ResearchElementDefinition":
		x := fhir401.ResearchElementDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ResearchStudy":
		x := fhir401.ResearchStudy{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ResearchSubject":
		x := fhir401.ResearchSubject{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Resource":
		x := fhir401.Resource{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "RiskAssessment":
		x := fhir401.RiskAssessment{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "RiskEvidenceSynthesis":
		x := fhir401.RiskEvidenceSynthesis{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Schedule":
		x := fhir401.Schedule{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SearchParameter":
		x := fhir401.SearchParameter{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ServiceRequest":
		x := fhir401.ServiceRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Slot":
		x := fhir401.Slot{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Specimen":
		x := fhir401.Specimen{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SpecimenDefinition":
		x := fhir401.SpecimenDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "StructureDefinition":
		x := fhir401.StructureDefinition{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "StructureMap":
		x := fhir401.StructureMap{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Subscription":
		x := fhir401.Subscription{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Substance":
		x := fhir401.Substance{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstanceNucleicAcid":
		x := fhir401.SubstanceNucleicAcid{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstancePolymer":
		x := fhir401.SubstancePolymer{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstanceProtein":
		x := fhir401.SubstanceProtein{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstanceReferenceInformation":
		x := fhir401.SubstanceReferenceInformation{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstanceSourceMaterial":
		x := fhir401.SubstanceSourceMaterial{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SubstanceSpecification":
		x := fhir401.SubstanceSpecification{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SupplyDelivery":
		x := fhir401.SupplyDelivery{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "SupplyRequest":
		x := fhir401.SupplyRequest{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "Task":
		x := fhir401.Task{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "TerminologyCapabilities":
		x := fhir401.TerminologyCapabilities{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "TestReport":
		x := fhir401.TestReport{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "TestScript":
		x := fhir401.TestScript{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "ValueSet":
		x := fhir401.ValueSet{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "VerificationResult":
		x := fhir401.VerificationResult{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	case "VisionPrescription":
		x := fhir401.VisionPrescription{}
		uerr := json.Unmarshal(resourceRawJson, &x)
		if asPointer {
			return &x, uerr
		} else {
			return x, uerr
		}
	default:
		return nil, fmt.Errorf("could not decode resource")
	}
}
