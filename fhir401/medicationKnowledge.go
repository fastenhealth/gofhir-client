// Copyright 2022 - Fasten Health
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fhir401

import "encoding/json"

// THIS FILE IS GENERATED BY https://github.com/fastenhealth/gofhir-models-gen
// PLEASE DO NOT EDIT BY HAND

// MedicationKnowledge is documented here http://hl7.org/fhir/StructureDefinition/MedicationKnowledge
// Information about a medication that is used to support knowledge.
type MedicationKnowledge struct {
	Id                         *string                                         `bson:"id,omitempty" json:"id,omitempty"`
	Meta                       *Meta                                           `bson:"meta,omitempty" json:"meta,omitempty"`
	ImplicitRules              *string                                         `bson:"implicitRules,omitempty" json:"implicitRules,omitempty"`
	Language                   *string                                         `bson:"language,omitempty" json:"language,omitempty"`
	Text                       *Narrative                                      `bson:"text,omitempty" json:"text,omitempty"`
	Contained                  []json.RawMessage                               `bson:"contained,omitempty" json:"contained,omitempty"`
	Extension                  []Extension                                     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension          []Extension                                     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Code                       *CodeableConcept                                `bson:"code,omitempty" json:"code,omitempty"`
	Status                     *string                                         `bson:"status,omitempty" json:"status,omitempty"`
	Manufacturer               *Reference                                      `bson:"manufacturer,omitempty" json:"manufacturer,omitempty"`
	DoseForm                   *CodeableConcept                                `bson:"doseForm,omitempty" json:"doseForm,omitempty"`
	Amount                     *Quantity                                       `bson:"amount,omitempty" json:"amount,omitempty"`
	Synonym                    []string                                        `bson:"synonym,omitempty" json:"synonym,omitempty"`
	RelatedMedicationKnowledge []MedicationKnowledgeRelatedMedicationKnowledge `bson:"relatedMedicationKnowledge,omitempty" json:"relatedMedicationKnowledge,omitempty"`
	AssociatedMedication       []Reference                                     `bson:"associatedMedication,omitempty" json:"associatedMedication,omitempty"`
	ProductType                []CodeableConcept                               `bson:"productType,omitempty" json:"productType,omitempty"`
	Monograph                  []MedicationKnowledgeMonograph                  `bson:"monograph,omitempty" json:"monograph,omitempty"`
	Ingredient                 []MedicationKnowledgeIngredient                 `bson:"ingredient,omitempty" json:"ingredient,omitempty"`
	PreparationInstruction     *string                                         `bson:"preparationInstruction,omitempty" json:"preparationInstruction,omitempty"`
	IntendedRoute              []CodeableConcept                               `bson:"intendedRoute,omitempty" json:"intendedRoute,omitempty"`
	Cost                       []MedicationKnowledgeCost                       `bson:"cost,omitempty" json:"cost,omitempty"`
	MonitoringProgram          []MedicationKnowledgeMonitoringProgram          `bson:"monitoringProgram,omitempty" json:"monitoringProgram,omitempty"`
	AdministrationGuidelines   []MedicationKnowledgeAdministrationGuidelines   `bson:"administrationGuidelines,omitempty" json:"administrationGuidelines,omitempty"`
	MedicineClassification     []MedicationKnowledgeMedicineClassification     `bson:"medicineClassification,omitempty" json:"medicineClassification,omitempty"`
	Packaging                  *MedicationKnowledgePackaging                   `bson:"packaging,omitempty" json:"packaging,omitempty"`
	DrugCharacteristic         []MedicationKnowledgeDrugCharacteristic         `bson:"drugCharacteristic,omitempty" json:"drugCharacteristic,omitempty"`
	Contraindication           []Reference                                     `bson:"contraindication,omitempty" json:"contraindication,omitempty"`
	Regulatory                 []MedicationKnowledgeRegulatory                 `bson:"regulatory,omitempty" json:"regulatory,omitempty"`
	Kinetics                   []MedicationKnowledgeKinetics                   `bson:"kinetics,omitempty" json:"kinetics,omitempty"`
}

// Associated or related knowledge about a medication.
type MedicationKnowledgeRelatedMedicationKnowledge struct {
	Id                *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              CodeableConcept `bson:"type" json:"type"`
	Reference         []Reference     `bson:"reference" json:"reference"`
}

// Associated documentation about the medication.
type MedicationKnowledgeMonograph struct {
	Id                *string          `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension      `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension      `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              *CodeableConcept `bson:"type,omitempty" json:"type,omitempty"`
	Source            *Reference       `bson:"source,omitempty" json:"source,omitempty"`
}

// Identifies a particular constituent of interest in the product.
type MedicationKnowledgeIngredient struct {
	Id                  *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension           []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension   []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	ItemCodeableConcept CodeableConcept `bson:"itemCodeableConcept" json:"itemCodeableConcept"`
	ItemReference       Reference       `bson:"itemReference" json:"itemReference"`
	IsActive            *bool           `bson:"isActive,omitempty" json:"isActive,omitempty"`
	Strength            *Ratio          `bson:"strength,omitempty" json:"strength,omitempty"`
}

// The price of the medication.
type MedicationKnowledgeCost struct {
	Id                *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              CodeableConcept `bson:"type" json:"type"`
	Source            *string         `bson:"source,omitempty" json:"source,omitempty"`
	Cost              Money           `bson:"cost" json:"cost"`
}

// The program under which the medication is reviewed.
type MedicationKnowledgeMonitoringProgram struct {
	Id                *string          `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension      `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension      `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              *CodeableConcept `bson:"type,omitempty" json:"type,omitempty"`
	Name              *string          `bson:"name,omitempty" json:"name,omitempty"`
}

// Guidelines for the administration of the medication.
type MedicationKnowledgeAdministrationGuidelines struct {
	Id                        *string                                                             `bson:"id,omitempty" json:"id,omitempty"`
	Extension                 []Extension                                                         `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension         []Extension                                                         `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Dosage                    []MedicationKnowledgeAdministrationGuidelinesDosage                 `bson:"dosage,omitempty" json:"dosage,omitempty"`
	IndicationCodeableConcept *CodeableConcept                                                    `bson:"indicationCodeableConcept,omitempty" json:"indicationCodeableConcept,omitempty"`
	IndicationReference       *Reference                                                          `bson:"indicationReference,omitempty" json:"indicationReference,omitempty"`
	PatientCharacteristics    []MedicationKnowledgeAdministrationGuidelinesPatientCharacteristics `bson:"patientCharacteristics,omitempty" json:"patientCharacteristics,omitempty"`
}

// Dosage for the medication for the specific guidelines.
type MedicationKnowledgeAdministrationGuidelinesDosage struct {
	Id                *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              CodeableConcept `bson:"type" json:"type"`
	Dosage            []Dosage        `bson:"dosage" json:"dosage"`
}

// Characteristics of the patient that are relevant to the administration guidelines (for example, height, weight, gender, etc.).
type MedicationKnowledgeAdministrationGuidelinesPatientCharacteristics struct {
	Id                            *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension                     []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension             []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	CharacteristicCodeableConcept CodeableConcept `bson:"characteristicCodeableConcept" json:"characteristicCodeableConcept"`
	CharacteristicQuantity        Quantity        `bson:"characteristicQuantity" json:"characteristicQuantity"`
	Value                         []string        `bson:"value,omitempty" json:"value,omitempty"`
}

// Categorization of the medication within a formulary or classification system.
type MedicationKnowledgeMedicineClassification struct {
	Id                *string           `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension       `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension       `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              CodeableConcept   `bson:"type" json:"type"`
	Classification    []CodeableConcept `bson:"classification,omitempty" json:"classification,omitempty"`
}

// Information that only applies to packages (not products).
type MedicationKnowledgePackaging struct {
	Id                *string          `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension      `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension      `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              *CodeableConcept `bson:"type,omitempty" json:"type,omitempty"`
	Quantity          *Quantity        `bson:"quantity,omitempty" json:"quantity,omitempty"`
}

// Specifies descriptive properties of the medicine, such as color, shape, imprints, etc.
type MedicationKnowledgeDrugCharacteristic struct {
	Id                   *string          `bson:"id,omitempty" json:"id,omitempty"`
	Extension            []Extension      `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension    []Extension      `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type                 *CodeableConcept `bson:"type,omitempty" json:"type,omitempty"`
	ValueCodeableConcept *CodeableConcept `bson:"valueCodeableConcept,omitempty" json:"valueCodeableConcept,omitempty"`
	ValueString          *string          `bson:"valueString,omitempty" json:"valueString,omitempty"`
	ValueQuantity        *Quantity        `bson:"valueQuantity,omitempty" json:"valueQuantity,omitempty"`
	ValueBase64Binary    *string          `bson:"valueBase64Binary,omitempty" json:"valueBase64Binary,omitempty"`
}

// Regulatory information about a medication.
type MedicationKnowledgeRegulatory struct {
	Id                  *string                                     `bson:"id,omitempty" json:"id,omitempty"`
	Extension           []Extension                                 `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension   []Extension                                 `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	RegulatoryAuthority Reference                                   `bson:"regulatoryAuthority" json:"regulatoryAuthority"`
	Substitution        []MedicationKnowledgeRegulatorySubstitution `bson:"substitution,omitempty" json:"substitution,omitempty"`
	Schedule            []MedicationKnowledgeRegulatorySchedule     `bson:"schedule,omitempty" json:"schedule,omitempty"`
	MaxDispense         *MedicationKnowledgeRegulatoryMaxDispense   `bson:"maxDispense,omitempty" json:"maxDispense,omitempty"`
}

// Specifies if changes are allowed when dispensing a medication from a regulatory perspective.
type MedicationKnowledgeRegulatorySubstitution struct {
	Id                *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Type              CodeableConcept `bson:"type" json:"type"`
	Allowed           bool            `bson:"allowed" json:"allowed"`
}

// Specifies the schedule of a medication in jurisdiction.
type MedicationKnowledgeRegulatorySchedule struct {
	Id                *string         `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension     `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension     `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Schedule          CodeableConcept `bson:"schedule" json:"schedule"`
}

// The maximum number of units of the medication that can be dispensed in a period.
type MedicationKnowledgeRegulatoryMaxDispense struct {
	Id                *string     `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	Quantity          Quantity    `bson:"quantity" json:"quantity"`
	Period            *Duration   `bson:"period,omitempty" json:"period,omitempty"`
}

// The time course of drug absorption, distribution, metabolism and excretion of a medication from the body.
type MedicationKnowledgeKinetics struct {
	Id                *string     `bson:"id,omitempty" json:"id,omitempty"`
	Extension         []Extension `bson:"extension,omitempty" json:"extension,omitempty"`
	ModifierExtension []Extension `bson:"modifierExtension,omitempty" json:"modifierExtension,omitempty"`
	AreaUnderCurve    []Quantity  `bson:"areaUnderCurve,omitempty" json:"areaUnderCurve,omitempty"`
	LethalDose50      []Quantity  `bson:"lethalDose50,omitempty" json:"lethalDose50,omitempty"`
	HalfLifePeriod    *Duration   `bson:"halfLifePeriod,omitempty" json:"halfLifePeriod,omitempty"`
}

// This function returns resource reference information
func (r MedicationKnowledge) ResourceRef() (string, *string) {
	return "MedicationKnowledge", r.Id
}

// This function returns resource reference information
func (r MedicationKnowledge) ContainedResources() []json.RawMessage {
	return r.Contained
}

type OtherMedicationKnowledge MedicationKnowledge

// MarshalJSON marshals the given MedicationKnowledge as JSON into a byte slice
func (r MedicationKnowledge) MarshalJSON() ([]byte, error) {
	return json.Marshal(struct {
		OtherMedicationKnowledge
		ResourceType string `json:"resourceType"`
	}{
		OtherMedicationKnowledge: OtherMedicationKnowledge(r),
		ResourceType:             "MedicationKnowledge",
	})
}

// UnmarshalMedicationKnowledge unmarshals a MedicationKnowledge.
func UnmarshalMedicationKnowledge(b []byte) (MedicationKnowledge, error) {
	var medicationKnowledge MedicationKnowledge
	if err := json.Unmarshal(b, &medicationKnowledge); err != nil {
		return medicationKnowledge, err
	}
	return medicationKnowledge, nil
}
